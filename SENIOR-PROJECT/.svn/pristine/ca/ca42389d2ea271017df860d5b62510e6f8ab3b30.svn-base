@model IList<PhungNoiProject.Models.Product>


@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Bakery Products</h1>
    </div>


    <div class="panel panel-primary">

        <div class="panel-heading">

            <div class="col-sm-3">Select products</div>

            @using (Html.BeginForm("Product", "Home", FormMethod.Get))
            {
                @Html.ValidationSummary(true)
                @Html.AntiForgeryToken()
                     
                <label>Category:</label>
                <select name="Category" style="color: black;">
                    <option>category</option>
                    <option value="Bakery">Bakery</option>
                    <option value="Cake">Cake</option>
                    <option value="Drink">Drink</option>
                    <option value="ETC">ETC</option>
                </select>
                    
                <label>Price:</label>
                <select name="Price" style="color: black;">
                    <option>price</option>
                    <option value="10">< 10</option>
                    <option value="20">< 20</option>
                    <option value="30">< 30</option>
                    <option value="40">< 40</option>
                    <option value="1000">40 up</option>
                </select>
             
                    
                <input type="submit" value="Search">
                
                   
            }


            <div class="input-group custom-search-form" style="width: 220px; float: right; top: -30px;">

                <input id="searchText" type="text" class="form-control" placeholder="Search...">

                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" onclick="doSearch()">
                        <i class="fa fa-search"></i>
                    </button>

                    <script>
                        function doSearch() {
                            var searchq = document.getElementById("searchText").value;
                            if (searchq != null && searchq.length > 0) {
                                window.location = "/Home/Product?q=" + searchq;
                            }
                        }
                        var q = getQueryString()["q"];
                        if (q != null)
                            document.getElementById("searchText").value = q;
                    </script>

                </span>
            </div>


        </div>
        <!-- /.panel-heading -->
        <div class="panel-body">
            <div class="table-responsive">
                @using (Html.BeginForm("Product", "Home", FormMethod.Post))
                {
                    @Html.ValidationSummary(true)
                    @Html.AntiForgeryToken()
                    <form role="form">
                        <table class="table">

                            <thead>


                                <tr>
                                    <th>#</th>
                                    <th>Picture</th>
                                    <th>
                                        @Html.ActionLink("Name", "Product", new { sortOrder = ViewBag.NameSortParm })
                                    </th>
                                    <th>
                                        @Html.ActionLink("Price", "Product", new { sortOrder = ViewBag.PriceSortParm })
                                    </th>
                                    <th>Category</th>


                                </tr>
                            </thead>

                            <tbody>

                                @for (int i = 0; i < Model.Count(); i++)
                                {
                                    <tr>
                                        @Html.HiddenFor(model => model[i].id)
                                        <td>@Html.DisplayFor(model => model[i].id)</td>
                                        <td>
                                            <img src="..@Html.ValueFor(model => model[i].picture)" height="100"; width="150"/>
                                        </td>
                                        <td>@Html.DisplayFor(model => model[i].name)</td>
                                        <td>@Html.DisplayFor(model => model[i].price)</td>
                                        <td>@Html.DisplayFor(model => model[i].category)</td>

                                        @if (Request.IsAuthenticated)
                                        {
                                          // <td> <input class="btn btn-primary" type="submit" value="Add to Cart" /></td>
                                            <td>@Html.ActionLink("Add to Cart", "Cart", new { id = Model[i].id })</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                            
                        </table>
                        <div id="orderList"></div>


                      

                    </form>
                }
            </div>
        </div>

        <script>
            var items;
            var hasValue = false;
            function orderItem(id, name, qty) {
                this.id = id;
                this.name = name;
                this.qty = qty;
            }

            function addItem(id, name) {
                if (document.getElementById("Qty_" + id).value > 0) {
                    if (!hasValue) {
                        var item = new orderItem(id, name, parseInt(document.getElementById("Qty_" + id).value));
                        items = new Array(item);
                        hasValue = true;
                    } else {
                        hasValue = false;
                        var i = 0;
                        for (; i < items.length; i++) {
                            if (items[i].id == id) {
                                items[i].qty += parseInt(document.getElementById("Qty_" + id).value);
                                hasValue = true;
                            }
                        }
                        if (!hasValue) {
                            var item = new orderItem(id, name, parseInt((document.getElementById("Qty_" + id).value)));
                            items[i] = item;
                            hasValue = true;
                        }
                    }
                    var orderList = document.getElementById("orderList");
                    orderList.innerText = "";
                    for (var i = 0; i < items.length; i++) {
                        orderList.innerText += items[i].id + ":" + items[i].name + ":" + items[i].qty + "\r\n";
                    }
                }
            }
        </script>


        <!-- /.table-responsive -->
        </div>

        @* <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@

        <!-- /.panel-body -->
    </div>
